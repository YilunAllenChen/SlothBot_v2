{"version":3,"sources":["store/store.jsx","components/universal/NavBar.jsx","pages/Home.jsx","apis/database.jsx","components/Controller/InstructionList.jsx","components/Controller/SensorData.jsx","pages/Controller.jsx","pages/Team.jsx","App.jsx","index.js"],"names":["rootReducer","createSlice","name","initialState","view","controller","activeAgent","reducers","toPage","state","action","payload","actions","store","configureStore","reducer","CecropiaNavBar","props","toggleDropdown","bind","toggleNavbar","dropdownOpen","collapseOpen","this","setState","target","dispatch","console","log","type","expand","sticky","style","backgroundColor","href","onClick","open","navbar","handleGoToPage","active","className","size","seamless","icon","faSearch","placeholder","React","Component","connect","BasicCardExample","height","width","src","title","frameBorder","autoplay","allow","allowFullScreen","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","DBRef","firestore","collection","RobotController","dataListener","agentData","agentDataReady","DB","doc","onSnapshot","docSnapshot","data","instructions","uniqueKey","instruction","push","length","options","scales","yAxes","ticks","beginAtZero","x","autoSkip","maxTicksLimit","SensorData","selectedDataView","grouped","ts","env_data","labels","datasets","label","fill","borderColor","Date","parseInt","toLocaleDateString","Object","keys","selections","dataType","value","onChange","event","activeAgentSelector","useSelector","xs","md","lg","disabled","margin","set","merge","cardStyle","sm","App","main","NavBar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ef2abaaf.chunk.js","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst rootReducer = createSlice({\n  name: \"reducer\",\n  initialState: {\n    view: \"home\",\n    controller: {\n        activeAgent: \"AGENT_0xdca632abbe28\"\n    }\n  },\n  reducers: {\n    toPage: (state, action) => {\n      state.view = action.payload;\n    },\n  },\n});\n\nexport const {\n  toPage,\n} = rootReducer.actions;\n\nexport const store = configureStore({\n  reducer: rootReducer.reducer,\n});\n\nexport default rootReducer.reducer;\n","import React from \"react\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormInput,\n  Collapse,\n} from \"shards-react\";\nimport \"./navbar.css\";\n\nimport { connect } from \"react-redux\";\nimport { toPage } from \"../../store/store\";\n\nclass CecropiaNavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n\n    this.state = {\n      dropdownOpen: false,\n      collapseOpen: false,\n    };\n  }\n\n  toggleDropdown() {\n    this.setState({\n      ...this.state,\n      ...{\n        dropdownOpen: !this.state.dropdownOpen,\n      },\n    });\n  }\n\n  toggleNavbar() {\n    this.setState({\n      ...this.state,\n      ...{\n        collapseOpen: !this.state.collapseOpen,\n      },\n    });\n  }\n\n  handleGoToPage(target) {\n    this.props.dispatch(toPage(target));\n    console.log(target);\n  }\n\n  render() {\n    return (\n      <Navbar type=\"dark\" expand=\"md\" sticky=\"top\" style={{ backgroundColor: \"#223344\" }}>\n        <NavbarBrand href=\"#\">Cecropia</NavbarBrand>\n        <NavbarToggler onClick={this.toggleNavbar} />\n\n        <Collapse open={this.state.collapseOpen} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink\n                onClick={() => this.handleGoToPage(\"home\")}\n                href=\"#\"\n                active={this.props.view===\"home\"}\n              >\n                Home\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                onClick={() => this.handleGoToPage(\"controller\")}\n                href=\"#\"\n                active={this.props.view===\"controller\"}\n              >\n                Controller\n              </NavLink>\n            </NavItem>{\" \"}\n            <NavItem>\n              <NavLink\n                onClick={() => this.handleGoToPage(\"team\")}\n                href=\"#\"\n                active={this.props.view===\"team\"}\n              >\n                Team\n              </NavLink>\n            </NavItem>\n          </Nav>\n\n          <Nav navbar className=\"ml-auto\">\n            <InputGroup size=\"sm\" seamless>\n              <InputGroupAddon type=\"prepend\">\n                <InputGroupText>\n                  <FontAwesomeIcon icon={faSearch} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <FormInput className=\"border-0\" placeholder=\"Search...\" />\n            </InputGroup>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  view: state.view,\n});\n\nexport default connect(mapStateToProps)(CecropiaNavBar);\n","import React from \"react\";\n\nexport default function BasicCardExample() {\n  return (\n    <div style={{ height: \"calc(100vh - 80px)\" }}>\n      <iframe\n        width=\"100%\"\n        height=\"100%\"\n        src=\"https://www.youtube.com/embed/foiRTJnc-vA\"\n        title=\"YouTube video player\"\n        frameBorder=\"0\"\n        autoplay=\"1\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  );\n}\n","\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCGiPWGUd_6q5FvGy908P91AT3i7pyslHI\",\n  authDomain: \"cecropia.firebaseapp.com\",\n  databaseURL: \"https://cecropia-default-rtdb.firebaseio.com\",\n  projectId: \"cecropia\",\n  storageBucket: \"cecropia.appspot.com\",\n  messagingSenderId: \"582360457051\",\n  appId: \"1:582360457051:web:d75e356ec9e83ef306c47e\",\n  measurementId: \"G-QXFS18M5T5\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst DBRef = firebase.firestore().collection(\"sensor_data\");\n\nexport default DBRef;","import React from \"react\";\nimport { ListGroup, ListGroupItem } from \"shards-react\";\nimport { connect } from \"react-redux\";\nimport DB from \"../../apis/database\";\nimport \"./InstructionList.css\"\n\n\nclass RobotController extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataListener = () => {};\n\n    this.state = {\n      agentData: null,\n      agentDataReady: false,\n    };\n  }\n\n  componentDidMount() {\n    this.dataListener = DB.doc(\"AGENT_0xdca632abbe28\").onSnapshot(\n      (docSnapshot) => {\n        console.log(docSnapshot.data());\n        this.setState({\n          agentData: docSnapshot.data(),\n          agentDataReady: true,\n        });\n      }\n    );\n  }\n\n  componentWillUnmount() {\n    this.dataListener(); // unhook the listener\n  }\n\n  render() {\n    let instructions = [];\n    let uniqueKey = 0;\n    if (this.state.agentDataReady) {\n      let data = this.state.agentData;\n      for (let instruction of data.instructions) {\n        instructions.push(\n          <ListGroupItem className=\"SmallPaddingInstruction\" key={uniqueKey++}>{instruction}</ListGroupItem>\n        );\n      }\n      if (instructions.length === 0) {\n        instructions.push(\n          <ListGroupItem className=\"SmallPaddingInstruction\" key=\"empty\">Instruction Queue is empty</ListGroupItem>\n        );\n      }\n    } else {\n      instructions = <ListGroupItem>Loading...</ListGroupItem>;\n    }\n    return <ListGroup className=\"black SmallPaddingInstruction\">{instructions}</ListGroup>;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  activeAgent: state.controller.activeAgent,\n});\n\nexport default connect(mapStateToProps)(RobotController);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport DB from \"../../apis/database\";\nimport { Line } from \"react-chartjs-2\";\nimport { Container, FormSelect } from \"shards-react\";\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n    x: {\n      ticks: {\n        autoSkip: true,\n        maxTicksLimit: 5,\n      },\n    },\n  },\n};\n\nclass SensorData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataListener = () => {};\n    this.state = {\n      agentData: null,\n      agentDataReady: false,\n      selectedDataView: null,\n    };\n  }\n\n  componentDidMount() {\n    this.dataListener = DB.doc(\"AGENT_0xdca632abbe28\").onSnapshot(\n      (doc) => {\n        let grouped = {};\n        doc = doc.data().env_data;\n        for (let ts in doc) {\n          if (!(doc[ts][\"type\"] in grouped))\n            grouped[doc[ts][\"type\"]] = {\n              labels: [],\n              datasets: [\n                {\n                  label: doc[ts][\"type\"],\n                  data: [],\n                  fill: false,\n                  backgroundColor: \"rgb(255, 99, 132)\",\n                  borderColor: \"rgba(255, 99, 132, 0.2)\",\n                },\n              ],\n            };\n\n          grouped[doc[ts][\"type\"]].labels.push(\n            new Date(parseInt(ts)).toLocaleDateString()\n          );\n          grouped[doc[ts][\"type\"]].datasets[0].data.push(doc[ts][\"data\"]);\n        }\n        this.setState({\n          agentData: grouped,\n          agentDataReady: true,\n          selectedDataView: Object.keys(grouped)[0]\n        });\n      }\n\n      // {\n      //   console.log(docSnapshot.data());\n      //   this.setState({\n      //     agentData: docSnapshot.data(),\n      //     agentDataReady: true,\n      //   });\n      // }\n    );\n  }\n\n  componentWillUnmount() {\n    this.dataListener(); // unhook the listener\n  }\n\n  render() {\n    if (!this.state.agentDataReady) {\n      return <div>Loading...</div>;\n    } else {\n      let selections = [];\n      for (let dataType of Object.keys(this.state.agentData)) {\n        selections.push(<option value={dataType}>{dataType}</option>);\n      }\n      return (\n        <Container>\n          <FormSelect\n            onChange={(event) => {\n              this.setState({ selectedDataView: event.target.value });\n              console.log(event.target.value);\n            }}\n          >\n            {selections}\n          </FormSelect>\n          <Line\n            data={this.state.agentData[this.state.selectedDataView]}\n            options={options}\n          />\n        </Container>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  activeAgent: state.controller.activeAgent,\n});\n\nexport default connect(mapStateToProps)(SensorData);\n","import React from \"react\";\nimport {\n  Col,\n  Container,\n  Row,\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Button,\n  FormSelect,\n} from \"shards-react\";\n\nimport InstructionList from \"../components/Controller/InstructionList\";\nimport SensorData from \"../components/Controller/SensorData\";\nimport { useSelector } from \"react-redux\";\n\nimport DB from \"../apis/database\";\n\nconst activeAgentSelector = (state) => state.controller.activeAgent;\n\nexport default function BasicCardExample() {\n  const activeAgent = useSelector(activeAgentSelector);\n  return (\n    <Container>\n      <Row>\n        <Col xs=\"12\" md=\"6\">\n          <h3 className=\"white\">Command Center</h3>\n          <Row>\n            <Col xs=\"8\" lg=\"9\">\n              <FormSelect>\n                <option value=\"first\">{activeAgent}</option>\n                <option value=\"third\" disabled>\n                  This feature is under development\n                </option>\n              </FormSelect>\n            </Col>\n            <Col xs=\"4\" lg=\"3\">\n              <Button style={{ width: \"100%\", height: \"100%\" }}>Connect</Button>\n            </Col>\n          </Row>\n          <Row>\n            <Card style={{ width: \"100%\", margin: \"10px\" }} className=\"black\">\n              <CardHeader>Robot Command Bank</CardHeader>\n              <CardBody>\n                <p>\n                  All instructions will be queued to the robot and executed at\n                  earliest convenience.\n                </p>\n                <Button\n                  onClick={() => {\n                    DB.doc(\"AGENT_0xdca632abbe28\").set(\n                      {\n                        instructions: [\"LED ON\"],\n                      },\n                      { merge: true }\n                    );\n                  }}\n                >\n                  LED ON\n                </Button>{\" \"}\n                <Button\n                  onClick={() => {\n                    DB.doc(\"AGENT_0xdca632abbe28\").set(\n                      {\n                        instructions: [\"LED OFF\"],\n                      },\n                      { merge: true }\n                    );\n                  }}\n                >\n                  LED OFF\n                </Button>{\" \"}\n                <Button\n                  onClick={() => {\n                    DB.doc(\"AGENT_0xdca632abbe28\").set(\n                      {\n                        instructions: [\n                          \"LED ON\",\n                          \"SLEEP 1\",\n                          \"LED OFF\",\n                          \"SLEEP 1\",\n                          \"LED ON\",\n                          \"SLEEP 1\",\n                          \"LED OFF\",\n                          \"SLEEP 1\",\n                        ],\n                      },\n                      { merge: true }\n                    );\n                  }}\n                >\n                  Blink\n                </Button>\n              </CardBody>\n              <CardFooter>Card footer</CardFooter>\n            </Card>\n          </Row>\n        </Col>\n        <Col xs=\"12\" md=\"6\">\n          <h3 className=\"white\">Sensor Data</h3>\n          <SensorData />\n          <hr />\n          <h3 className=\"white\">Instruction Queue</h3>\n          <InstructionList></InstructionList>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  Col,\n  Container,\n  Row,\n  CardHeader,\n  CardBody,\n  CardTitle,\n} from \"shards-react\";\n\nconst cardStyle = {\n  margin: \"10px\",\n};\n\nexport default function BasicCardExample() {\n  return (\n    <Container>\n      <Row>\n        <Col sm=\"12\" md=\"4\">\n          <Card className=\"black\" style={cardStyle}>\n            <CardHeader>Faculty Advisor</CardHeader>\n            <CardBody>\n              <CardTitle>Dr. Magnus Egerstedt</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>{\" \"}\n        <Col sm=\"12\" md=\"4\">\n          <Card className=\"black\" style={cardStyle}>\n            <CardHeader>Project Lead</CardHeader>\n            <CardBody>\n              <CardTitle>Allen Chen</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>{\" \"}\n        <Col sm=\"12\" md=\"4\">\n          <Card className=\"black\" style={cardStyle}>\n            <CardHeader>Team Member</CardHeader>\n            <CardBody>\n              <CardTitle>Yousef Emam</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>{\" \"}\n        <Col sm=\"12\" md=\"4\">\n          <Card className=\"black\" style={cardStyle}>\n            <CardHeader>Team Member</CardHeader>\n            <CardBody>\n              <CardTitle>Carmen Jimenez</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col sm=\"12\" md=\"4\">\n          <Card className=\"black\" style={cardStyle}>\n            <CardHeader>Team Member</CardHeader>\n            <CardBody>\n              <CardTitle>Hannah Phillips</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport NavBar from \"./components/universal/NavBar\";\nimport \"./MainLayout.css\"\nimport { connect } from \"react-redux\"\n\n\nimport Home from \"./pages/Home\";\nimport Controller from \"./pages/Controller\";\nimport Team from \"./pages/Team\"\n\nclass App extends React.Component {\n\n\n  render() {\n    let main;\n    switch (this.props.view) {\n      case \"home\":\n        main = <Home />;\n        break;\n      case \"controller\":\n        main = <Controller />\n        break;\n      case \"team\":\n        main = <Team />\n        break;\n      default:\n        main = <div>default</div>\n        break;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"topbar\">\n          <NavBar />\n        </div>\n        <div className=\"mainContent\">{main}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  view: state.view\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"shards-ui/dist/css/shards.min.css\"\n\nimport App from './App';\n\nimport { store } from \"./store/store\"\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}