{"version":3,"sources":["store/store.jsx","components/universal/NavBar.jsx","pages/Home.jsx","apis/database.jsx","components/Controller/InstructionList.jsx","components/Controller/SensorData.jsx","components/Controller/CommandBank.jsx","components/Controller/StatusData.jsx","pages/Controller.jsx","pages/Team.jsx","App.jsx","index.js"],"names":["rootReducer","createSlice","name","initialState","view","controller","activeAgent","agentStatus","agentStatusReady","agentDataChart","agentDataReady","selectedDataView","agnetInstructions","agentInstructionsReady","reducers","toPage","state","action","payload","selectActiveAgentAndUnreadyData","setVisualization","setVisualizedSensorDataView","setFetchedAgentInstruction","agentInstructions","setAgentStatusData","actions","store","configureStore","reducer","CecropiaNavBar","props","toggleDropdown","bind","toggleNavbar","dropdownOpen","collapseOpen","this","setState","target","dispatch","console","log","type","expand","sticky","style","backgroundColor","href","onClick","open","navbar","handleGoToPage","active","className","size","seamless","icon","faSearch","placeholder","React","Component","connect","BasicCardExample","height","width","src","title","frameBorder","autoplay","allow","allowFullScreen","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","DBRef","firestore","collection","RobotController","dataListener","DB","doc","onSnapshot","docSnapshot","data","instructions","uniqueKey","instruction","push","length","options","scales","yAxes","ticks","beginAtZero","x","autoSkip","maxTicksLimit","SensorData","grouped","ts","env_data","labels","datasets","label","fill","borderColor","Date","parseInt","toLocaleDateString","Object","keys","selections","dataType","value","onChange","event","buttonStyles","margin","CommandBank","inst","set","merge","fireInstructions","theme","lastHeartBeatTime","heartbeat","toLocaleString","ip_addr","useDispatch","useState","dataReady","setDataReady","setData","get","then","all_agents","docs","forEach","id","agent_id","xs","md","lg","e","StatusData","cardStyle","sm","App","main","NavBar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.332f458a.chunk.js","sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\n\nconst rootReducer = createSlice({\n  name: \"reducer\",\n  initialState: {\n    view: \"home\",\n    controller: {\n      activeAgent: null,\n      agentStatus: null,\n      agentStatusReady: false,\n      agentDataChart: null,\n      agentDataReady: false,\n      selectedDataView: null,\n      agnetInstructions: [],\n      agentInstructionsReady: false,\n    },\n  },\n  reducers: {\n    toPage: (state, action) => {\n      state.view = action.payload;\n    },\n\n    selectActiveAgentAndUnreadyData: (state, action) => {\n      state.controller.activeAgent = action.payload;\n      state.controller.agentDataReady = false;\n      state.controller.agentInstructionsReady = false;\n      state.controller.agentStatusReady = false;\n    },\n\n    setVisualization: (state, action) => {\n      state.controller.agentDataReady = action.payload.agentDataReady;\n      state.controller.agentDataChart = action.payload.agentDataChart;\n      state.controller.selectedDataView = action.payload.selectedDataView;\n    },\n\n    setVisualizedSensorDataView: (state, action) => {\n      state.controller.selectedDataView = action.payload;\n    },\n\n    setFetchedAgentInstruction: (state, action) => {\n      state.controller.agentInstructions = action.payload.agentInstructions;\n      state.controller.agentInstructionsReady =\n        action.payload.agentInstructionsReady;\n    },\n\n    setAgentStatusData: (state, action) => {\n      state.controller.agentStatus = action.payload.agentStatus;\n      state.controller.agentStatusReady = action.payload.agentStatusReady;\n    }\n\n  },\n});\n\nexport const {\n  toPage,\n  selectActiveAgentAndUnreadyData,\n  setVisualization,\n  setVisualizedSensorDataView,\n  setFetchedAgentInstruction,\n  setAgentStatusData\n} = rootReducer.actions;\n\nexport const store = configureStore({\n  reducer: rootReducer.reducer,\n});\n\nexport default rootReducer.reducer;\n","import React from \"react\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormInput,\n  Collapse,\n} from \"shards-react\";\nimport \"./navbar.css\";\n\nimport { connect } from \"react-redux\";\nimport { toPage } from \"../../store/store\";\n\nclass CecropiaNavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleDropdown = this.toggleDropdown.bind(this);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n\n    this.state = {\n      dropdownOpen: false,\n      collapseOpen: false,\n    };\n  }\n\n  toggleDropdown() {\n    this.setState({\n      ...this.state,\n      ...{\n        dropdownOpen: !this.state.dropdownOpen,\n      },\n    });\n  }\n\n  toggleNavbar() {\n    this.setState({\n      ...this.state,\n      ...{\n        collapseOpen: !this.state.collapseOpen,\n      },\n    });\n  }\n\n  handleGoToPage(target) {\n    this.props.dispatch(toPage(target));\n    console.log(target);\n  }\n\n  render() {\n    return (\n      <Navbar type=\"dark\" expand=\"md\" sticky=\"top\" style={{ backgroundColor: \"#223344\" }}>\n        <NavbarBrand href=\"#\">Cecropia</NavbarBrand>\n        <NavbarToggler onClick={this.toggleNavbar} />\n\n        <Collapse open={this.state.collapseOpen} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink\n                onClick={() => this.handleGoToPage(\"home\")}\n                href=\"#\"\n                active={this.props.view===\"home\"}\n              >\n                Home\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink\n                onClick={() => this.handleGoToPage(\"controller\")}\n                href=\"#\"\n                active={this.props.view===\"controller\"}\n              >\n                Controller\n              </NavLink>\n            </NavItem>{\" \"}\n            <NavItem>\n              <NavLink\n                onClick={() => this.handleGoToPage(\"team\")}\n                href=\"#\"\n                active={this.props.view===\"team\"}\n              >\n                Team\n              </NavLink>\n            </NavItem>\n          </Nav>\n\n          <Nav navbar className=\"ml-auto\">\n            <InputGroup size=\"sm\" seamless>\n              <InputGroupAddon type=\"prepend\">\n                <InputGroupText>\n                  <FontAwesomeIcon icon={faSearch} />\n                </InputGroupText>\n              </InputGroupAddon>\n              <FormInput className=\"border-0\" placeholder=\"Search...\" />\n            </InputGroup>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  view: state.view,\n});\n\nexport default connect(mapStateToProps)(CecropiaNavBar);\n","import React from \"react\";\n\nexport default function BasicCardExample() {\n  return (\n    <div style={{ height: \"calc(100vh - 80px)\" }}>\n      <iframe\n        width=\"100%\"\n        height=\"100%\"\n        src=\"https://www.youtube.com/embed/foiRTJnc-vA\"\n        title=\"YouTube video player\"\n        frameBorder=\"0\"\n        autoplay=\"1\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n      ></iframe>\n    </div>\n  );\n}\n","\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCGiPWGUd_6q5FvGy908P91AT3i7pyslHI\",\n  authDomain: \"cecropia.firebaseapp.com\",\n  databaseURL: \"https://cecropia-default-rtdb.firebaseio.com\",\n  projectId: \"cecropia\",\n  storageBucket: \"cecropia.appspot.com\",\n  messagingSenderId: \"582360457051\",\n  appId: \"1:582360457051:web:d75e356ec9e83ef306c47e\",\n  measurementId: \"G-QXFS18M5T5\",\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst DBRef = firebase.firestore().collection(\"slothbots\");\n\nexport default DBRef;","import React from \"react\";\nimport { ListGroup, ListGroupItem } from \"shards-react\";\nimport { connect } from \"react-redux\";\nimport DB from \"../../apis/database\";\nimport \"./InstructionList.css\";\n\nimport { setFetchedAgentInstruction } from \"../../store/store\";\n\nclass RobotController extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataListener = () => {};\n  }\n\n  componentWillUnmount() {\n    this.dataListener(); // unhook the listener\n  }\n\n  render() {\n    if (!this.props.agentInstructionsReady) {\n      if(!this.props.activeAgent  || this.props.activeAgent === \"select\") {\n        return <div>Please select an agent.</div>\n      }\n      this.dataListener(); //unhook the listener\n      this.dataListener = DB.doc(this.props.activeAgent).onSnapshot(\n        (docSnapshot) => {\n          console.log(docSnapshot.data());\n          this.props.dispatch(\n            setFetchedAgentInstruction({\n              agentInstructions: docSnapshot.data().instructions,\n              agentInstructionsReady: true\n            })\n          );\n        }\n      );\n    }\n    let instructions = [];\n    let uniqueKey = 0;\n    if (this.props.agentInstructionsReady) {\n      let data = this.props.agentInstructions;\n      for (let instruction of data) {\n        instructions.push(\n          <ListGroupItem className=\"SmallPaddingInstruction\" key={uniqueKey++}>\n            {instruction}\n          </ListGroupItem>\n        );\n      }\n      if (instructions.length === 0) {\n        instructions.push(\n          <ListGroupItem className=\"SmallPaddingInstruction\" key=\"empty\">\n            Instruction Queue is empty\n          </ListGroupItem>\n        );\n      }\n    } else {\n      instructions = <ListGroupItem>Loading...</ListGroupItem>;\n    }\n    return (\n      <ListGroup className=\"black SmallPaddingInstruction\">\n        {instructions}\n      </ListGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  activeAgent: state.controller.activeAgent,\n  agentInstructions: state.controller.agentInstructions,\n  agentInstructionsReady: state.controller.agentInstructionsReady,\n});\n\nexport default connect(mapStateToProps)(RobotController);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport DB from \"../../apis/database\";\nimport { Line } from \"react-chartjs-2\";\nimport { Container, FormSelect } from \"shards-react\";\n\nimport {\n  setVisualization,\n  setVisualizedSensorDataView,\n} from \"../../store/store\";\n\nconst options = {\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n    x: {\n      ticks: {\n        autoSkip: true,\n        maxTicksLimit: 5,\n      },\n    },\n  },\n};\n\nclass SensorData extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataListener = () => {};\n  }\n\n  componentWillUnmount() {\n    this.dataListener(); // unhook the listener\n  }\n\n  render() {\n    if (!this.props.agentDataReady) {\n      if(!this.props.activeAgent  || this.props.activeAgent === \"select\") {\n        return <div>Please select an agent.</div>\n      }\n      this.dataListener(); // unhook the current listener\n      this.dataListener = DB.doc(this.props.activeAgent).onSnapshot((doc) => {\n        let grouped = {};\n        doc = doc.data().env_data;\n        for (let ts in doc) {\n          if (!(doc[ts][\"type\"] in grouped))\n            grouped[doc[ts][\"type\"]] = {\n              labels: [],\n              datasets: [\n                {\n                  label: doc[ts][\"type\"],\n                  data: [],\n                  fill: false,\n                  backgroundColor: \"rgb(255, 99, 132)\",\n                  borderColor: \"rgba(255, 99, 132, 0.2)\",\n                },\n              ],\n            };\n\n          grouped[doc[ts][\"type\"]].labels.push(\n            new Date(parseInt(ts)).toLocaleDateString()\n          );\n          grouped[doc[ts][\"type\"]].datasets[0].data.push(doc[ts][\"data\"]);\n        }\n        this.props.dispatch(\n          setVisualization({\n            agentDataChart: grouped,\n            agentDataReady: true,\n            selectedDataView: Object.keys(grouped)[0],\n          })\n        );\n      });\n    }\n    if (!this.props.agentDataReady) {\n      return <div>Loading...</div>;\n    } else {\n      let selections = [];\n      for (let dataType of Object.keys(this.props.agentDataChart)) {\n        selections.push(<option value={dataType}>{dataType}</option>);\n      }\n      return (\n        <Container>\n          <FormSelect\n            onChange={(event) => {\n              this.props.dispatch(\n                setVisualizedSensorDataView(event.target.value)\n              );\n            }}\n          >\n            {selections}\n          </FormSelect>\n          <Line\n            data={this.props.agentDataChart[this.props.selectedDataView]}\n            options={options}\n          />\n        </Container>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  activeAgent: state.controller.activeAgent,\n  agentDataReady: state.controller.agentDataReady,\n  agentDataChart: state.controller.agentDataChart,\n  selectedDataView: state.controller.selectedDataView,\n});\n\nexport default connect(mapStateToProps)(SensorData);\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, CardFooter, Button } from \"shards-react\";\nimport { connect } from \"react-redux\";\nimport DB from \"../../apis/database\";\nimport \"./InstructionList.css\";\n\nconst buttonStyles = {\n  margin: \"5px\",\n};\n\nclass CommandBank extends React.Component {\n  fireInstructions(inst) {\n    if (!this.props.activeAgent || this.props.activeAgent === \"select\") return;\n    DB.doc(this.props.activeAgent).set(\n      {\n        instructions: inst,\n      },\n      {\n        merge: true,\n      }\n    );\n  }\n\n  render() {\n    return (\n      <Card style={{ width: \"100%\", margin: \"10px\" }} className=\"black\">\n        <CardHeader>Robot Command Bank</CardHeader>\n        <CardBody>\n          <p>\n            All instructions will be queued to the robot and executed at\n            earliest convenience.\n          </p>\n          <Button\n            style={buttonStyles}\n            onClick={() => this.fireInstructions([\"LED ON\"])}\n          >\n            LED ON\n          </Button>\n          <Button\n            style={buttonStyles}\n            onClick={() => this.fireInstructions([\"LED OFF\"])}\n          >\n            LED OFF\n          </Button>\n          <Button\n            style={buttonStyles}\n            onClick={() =>\n              this.fireInstructions([\n                \"LED ON\",\n                \"SLEEP 1\",\n                \"LED OFF\",\n                \"SLEEP 1\",\n                \"LED ON\",\n                \"SLEEP 1\",\n                \"LED OFF\",\n                \"SLEEP 1\",\n              ])\n            }\n          >\n            Blink\n          </Button>\n          <hr />\n          {/* <Button\n            style={buttonStyles}\n            onClick={() => {\n              this.fireInstructions([\"READ SENSORS\"]);\n            }}\n          >\n            Read Sensors\n          </Button> */}\n          <Button\n            style={buttonStyles}\n            onClick={() => {\n              this.fireInstructions([\"GO\"]);\n            }}\n          >\n            GO\n          </Button>\n          <Button\n            style={buttonStyles}\n            onClick={() => {\n              this.fireInstructions([\"STOP\"]);\n            }}\n          >\n            STOP\n          </Button>\n          <Button\n            style={buttonStyles}\n            theme='info'\n            onClick={() => {\n              this.fireInstructions([\"UPDATE\"]);\n            }}\n          >\n            Update\n          </Button>\n        </CardBody>\n        <CardFooter></CardFooter>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  activeAgent: state.controller.activeAgent,\n});\n\nexport default connect(mapStateToProps)(CommandBank);\n","import React from \"react\";\nimport { Card, CardHeader, CardBody, CardFooter } from \"shards-react\";\nimport { connect } from \"react-redux\";\nimport DB from \"../../apis/database\";\nimport \"./InstructionList.css\";\n\nimport { setAgentStatusData } from \"../../store/store\";\n\nclass CommandBank extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dataListener = () => {};\n  }\n\n  componentWillUnmount() {\n    this.dataListener(); // unhook the listener\n  }\n\n  render() {\n    if (!this.props.agentStatusReady) {\n      if (!this.props.activeAgent || this.props.activeAgent === \"select\") {\n        return <div>Please select an agent.</div>;\n      }\n      this.dataListener(); //unhook the listener\n      this.dataListener = DB.doc(this.props.activeAgent).onSnapshot(\n        (docSnapshot) => {\n          this.props.dispatch(\n            setAgentStatusData({\n              agentStatus: docSnapshot.data().state,\n              agentStatusReady: true,\n            })\n          );\n        }\n      );\n      return <div>loading...</div>\n    }\n\n    let lastHeartBeatTime = new Date(this.props.agentStatus.heartbeat);\n\n\n    return (\n      <Card style={{ width: \"100%\", margin: \"10px\" }} className=\"black\">\n        <CardHeader>Robot Status</CardHeader>\n        <CardBody>\n          <p>Last Heartbeat: {lastHeartBeatTime.toLocaleString()}</p>\n          <p>IP Address: {this.props.agentStatus.ip_addr}</p>\n        </CardBody>\n        <CardFooter></CardFooter>\n      </Card>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  activeAgent: state.controller.activeAgent,\n  agentStatus: state.controller.agentStatus,\n  agentStatusReady: state.controller.agentStatusReady,\n});\n\nexport default connect(mapStateToProps)(CommandBank);\n","import React, { useState } from \"react\";\nimport { Col, Container, Row, Button, FormSelect } from \"shards-react\";\n\nimport InstructionList from \"../components/Controller/InstructionList\";\nimport SensorData from \"../components/Controller/SensorData\";\nimport CommandBank from \"../components/Controller/CommandBank\";\nimport StatusData from \"../components/Controller/StatusData\";\nimport { useDispatch } from \"react-redux\";\nimport { selectActiveAgentAndUnreadyData } from \"../store/store\";\n\nimport DB from \"../apis/database\";\n\nexport default function BasicCardExample() {\n  const dispatch = useDispatch();\n\n  const handleChangeOption = (e) => {\n    console.log(e.target.value);\n    dispatch(selectActiveAgentAndUnreadyData(e.target.value));\n  };\n\n  const handleRefreshListOfAgents = () => {\n    console.log(\"refreshing\")\n    setDataReady(false);\n    DB.get().then((data) => {\n      let all_agents = [];\n      data.docs.forEach((doc) => {\n        all_agents.push(doc.id);\n      });\n      setData(all_agents);\n      setDataReady(true);\n    });\n  }\n\n  let [dataReady, setDataReady] = useState(false);\n  let [data, setData] = useState([]);\n\n  if (!dataReady) {\n    DB.get().then((data) => {\n      let all_agents = [];\n      data.docs.forEach((doc) => {\n        all_agents.push(doc.id);\n      });\n      setData(all_agents);\n      setDataReady(true);\n    });\n    return (\n      <Container>\n        <Row>Loading...</Row>\n      </Container>\n    );\n  }\n\n  let options = [<option value={\"select\"}>Please Select</option>];\n  data.forEach((agent_id) => {\n    options.push(<option value={agent_id}>{agent_id}</option>);\n  });\n\n  return (\n    <Container>\n      <Row>\n        <Col xs=\"12\" md=\"6\">\n          <h3 className=\"white\">Command Center</h3>\n          <Row>\n            <Col xs=\"8\" lg=\"9\">\n              <FormSelect onChange={handleChangeOption}>{options}</FormSelect>\n            </Col>\n            <Col xs='4' lg='3'>\n              <Button theme='info' style={{width: '100%'}} onClick={handleRefreshListOfAgents}>Refresh</Button>\n            </Col>\n          </Row>\n          <Row>\n            <CommandBank />\n          </Row>\n          <Row>\n            <StatusData />\n          </Row>\n        </Col>\n        <Col xs=\"12\" md=\"6\">\n          <h3 className=\"white\">Sensor Data</h3>\n          <SensorData />\n          <hr />\n          <h3 className=\"white\">Instruction Queue</h3>\n          <InstructionList></InstructionList>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport {\n  Card,\n  Col,\n  Container,\n  Row,\n  CardHeader,\n  CardBody,\n  CardTitle,\n} from \"shards-react\";\n\nconst cardStyle = {\n  margin: \"10px\",\n};\n\nexport default function BasicCardExample() {\n  return (\n    <Container>\n      <Row>\n        <Col sm=\"12\" md=\"4\">\n          <Card className=\"black\" style={cardStyle}>\n            <CardHeader>Faculty Advisor</CardHeader>\n            <CardBody>\n              <CardTitle>Dr. Magnus Egerstedt</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>{\" \"}\n        <Col sm=\"12\" md=\"4\">\n          <Card className=\"black\" style={cardStyle}>\n            <CardHeader>Project Lead</CardHeader>\n            <CardBody>\n              <CardTitle>Allen Chen</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>{\" \"}\n        <Col sm=\"12\" md=\"4\">\n          <Card className=\"black\" style={cardStyle}>\n            <CardHeader>Team Member</CardHeader>\n            <CardBody>\n              <CardTitle>Yousef Emam</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>{\" \"}\n        <Col sm=\"12\" md=\"4\">\n          <Card className=\"black\" style={cardStyle}>\n            <CardHeader>Team Member</CardHeader>\n            <CardBody>\n              <CardTitle>Carmen Jimenez</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>\n        <Col sm=\"12\" md=\"4\">\n          <Card className=\"black\" style={cardStyle}>\n            <CardHeader>Team Member</CardHeader>\n            <CardBody>\n              <CardTitle>Hannah Phillips</CardTitle>\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport NavBar from \"./components/universal/NavBar\";\nimport \"./MainLayout.css\"\nimport { connect } from \"react-redux\"\n\n\nimport Home from \"./pages/Home\";\nimport Controller from \"./pages/Controller\";\nimport Team from \"./pages/Team\"\n\nclass App extends React.Component {\n\n\n  render() {\n    let main;\n    switch (this.props.view) {\n      case \"home\":\n        main = <Home />;\n        break;\n      case \"controller\":\n        main = <Controller />\n        break;\n      case \"team\":\n        main = <Team />\n        break;\n      default:\n        main = <div>default</div>\n        break;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"topbar\">\n          <NavBar />\n        </div>\n        <div className=\"mainContent\">{main}</div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  view: state.view\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"shards-ui/dist/css/shards.min.css\"\n\nimport App from './App';\n\nimport { store } from \"./store/store\"\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}